[project]
name = "emolens"
version = "0.1.0"
description = "AWS Strands Multi-Agent Embodied AI System - Camera-based autonomous AI agents with multi-modal capabilities"

authors = [
    { name = "marcosanyo", email = "73991021+marcosanyo@users.noreply.github.com" },
]
maintainers = [
    { name = "marcosanyo", email = "73991021+marcosanyo@users.noreply.github.com" },
]

requires-python = ">=3.13"
readme = "README.md"
license = { file = "LICENSE" }

dependencies = [
    "a2a-sdk>=0.2.10",
    "aiohttp>=3.12.13",
    "asyncclick>=8.1.8",
    "fasta2a>=0.3.7",
    "fastapi>=0.115.14",
    "fastmcp>=2.10.2",
    "folium>=0.20.0",
    "google-cloud-logging>=3.11.3",
    "httpx>=0.28.1",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "mcp[cli]>=1.10.1",
    "openai>=1.93.0",
    "pip>=25.1.1",
    "pydantic>=2.10.5",
    "pydantic-ai>=0.2.0",
    "pydantic-ai-slim[a2a]>=0.3.7",
    "pydantic-settings>=2.7.1",
    "python-dotenv>=1.1.1",
    "typing-extensions>=4.14.0",
    "uvicorn>=0.35.0",
    "onvif-zeep>=0.2.12",
    "wsdiscovery>=2.1.2",
    "google-generativeai>=0.7.2",
    "google-adk>=1.13.0",
    "google-cloud-texttospeech>=2.27.0",
    "pygame>=2.6.1",
    "aiortc>=1.13.0",
    "pytapo>=3.3.49",
    "strands-agents>=1.1.0",
    "strands-agents-tools>=0.0.1",
    "boto3>=1.35.0",
    "botocore>=1.35.0",
    "strands-agents-builder>=0.0.1",
    "bedrock-agentcore-starter-toolkit>=0.1.19",
    "supabase>=2.22.0",
    "requests>=2.32.0",
]

[project.scripts]
emolens = "main:main"
strands-agent = "strands_agent.server:main"
mcp-server = "mcp_server.server:main"

[tool.uv]
dev-dependencies = [
    "anyio>=4.9.0",
    "cookiecutter>=2.6.0",
    "cookiecutter-data-science>=2.1.0",
    "fastapi>=0.115.14",
    "google-adk",
    "google-genai>=1.24.0",
    "mcp>=1.10.1",
    "mkdocs-material>=9.5.50",
    "pre-commit>=4.1.0",
    "pydantic>=2.11.7",
    "pyright>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.9.2",
    "uvicorn>=0.35.0",
]

[tool.uv.sources]

[tool.hatch.build.targets.wheel]
packages = ["tools"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
